@model CyberTech.Models.ProductViewModel
@using CyberTech.Helpers

<style>
    .icon-container {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 16px;
        height: 16px;
        margin-right: 8px;
        text-align: center;
    }
    
    .icon-container i {
        font-size: 12px;
        color: #2c2c2c;
        line-height: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
    }
    
    /* Đảm bảo FontAwesome icons luôn hiển thị */
    .icon-container i::before {
        display: inline-block;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
    }
    
    .proloop-technical--line {
        display: flex;
        align-items: center;
        margin-bottom: 4px;
        font-size: 11px;
    }
    
    .proloop-technical--line span {
        flex: 1;
        color: #333;
    }
    
    /* Styling cho phần attributes */
    .proloop-technical {
        background-color: #f5f5f5;
        padding: 8px;
        border-radius: 4px;
        margin: 8px 0;
        border: 1px solid #e0e0e0;
    }
    
    /* Hover effect cho toàn bộ card */
    .proloop-block {
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .proloop-block:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    
    /* Styling cho tên sản phẩm */
    .proloop-name {
        font-size: 14px;
        font-weight: 500;
        line-height: 1.4;
        margin: 8px 0;
        color: #333;
    }
    
    /* Price Styling */
    .price-container {
        margin-bottom: 8px;
    }
    
    .original-price-line {
        margin-bottom: 4px;
    }
    
    .sale-price-line {
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    /* Sale price - màu đỏ */
    .proloop-price--highlight.sale-price {
        color: #dc3545;
        font-weight: 700;
        font-size: 16px;
    }
    
    /* Regular price - màu đen */
    .proloop-price--highlight.regular-price {
        color: #333;
        font-weight: 700;
        font-size: 16px;
    }
    
    /* Original price - gạch ngang, màu đen */
    .proloop-price--compare.original-price {
        color: #333;
        text-decoration: line-through;
        font-size: 14px;
        font-weight: 400;
    }
    
    /* Discount badge */
    .discount-badge {
        background-color: #dc3545;
        color: white;
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 11px;
        font-weight: 600;
        white-space: nowrap;
    }
</style>

<div class="proloop slick-slide" data-id="@Model.ProductID" data-list-items-item_name="@Model.Name" data-list-items-item-price="@Model.Price" aria-hidden="true" style="width: 220px; margin: 5px; flex: 0 0 220px; max-width: 220px; box-sizing: border-box;">
    <div class="proloop-block has-rating" id="collapi_item_loop_@Model.ProductID" data-id="@Model.ProductID" onclick="window.location.href='@Url.Action("ProductDetail", "Product", new { id = Model.ProductID })'" title="Xem chi tiết @Model.Name">
        <div class="proloop-img">
            <div class="aspect-ratio fade-box">
                <picture>
                    <source srcset="@Model.PrimaryImageUrlSmall" media="(max-width: 767px)">
                    <img class="img-default lazyloaded" src="@Model.PrimaryImageUrl" alt="@Model.Name">
                </picture>
            </div>
        </div>
        <div class="proloop-detail">
            <h3 class="proloop-name">
                @Model.Name
            </h3>
            <div class="proloop-technical">
                @foreach (var attr in Model.Attributes)
                {
                    var iconClass = IconHelper.GetFontAwesomeClass(attr.Key);
                    <div class="proloop-technical--line" data-tag="@attr.Key.ToLower()">
                        <div class="icon-container">
                            <i class="@iconClass" title="@attr.Key (@iconClass)" aria-hidden="true"></i>
                        </div>
                        <span>@attr.Value</span>
                    </div>
                }
            </div>
            <div class="proloop-price">
                @if (Model.HasDiscount)
                {
                    <!-- Có sale: hiển thị giá gốc trên, giá sale + badge dưới -->
                    <div class="price-container">
                        <!-- Giá gốc ở trên -->
                        <div class="original-price-line">
                            <span class="proloop-price--compare original-price">@Model.Price.ToString("N0")₫</span>
                        </div>
                        <!-- Giá sale và badge cùng hàng -->
                        <div class="sale-price-line">
                            <span class="proloop-price--highlight sale-price">@Model.CurrentPrice.ToString("N0")₫</span>
                            @if (Model.SalePercentage.HasValue && Model.SalePercentage > 0)
                            {
                                <!-- Dùng SalePercentage từ DB -->
                                <span class="discount-badge">-@Model.SalePercentage.Value.ToString("0")%</span>
                            }
                            else if (Model.HasDiscount)
                            {
                                <!-- Tính % từ giá nếu không có SalePercentage -->
                                <span class="discount-badge">-@(Math.Round(((Model.Price - Model.CurrentPrice) / Model.Price) * 100))%</span>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <!-- Không sale: hiển thị giá gốc màu đen -->
                    <div class="price-container">
                        <span class="proloop-price--highlight regular-price">@Model.Price.ToString("N0")₫</span>
                    </div>
                }
            </div>
            <div class="proloop-rating">
                <span class="number">@Model.AverageRating.ToString("F1")</span>
                <span class="count">(@Model.ReviewCount đánh giá)</span>
            </div>
        </div>
    </div>
</div>